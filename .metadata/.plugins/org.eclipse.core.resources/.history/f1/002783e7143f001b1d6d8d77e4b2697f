package thread;

public class Test {


	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		
		System.out.println("Available processors are :"+ Runtime.getRuntime().availableProcessors());
		System.out.println("Available memory are :"+ Runtime.getRuntime().freeMemory());
		System.out.println("Available total memory are :"+ Runtime.getRuntime().totalMemory());

		
		
		
		
		
		
}	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
//		Threads t1 = new Threads();
//		Threads t2 = new Threads();
//		
//		System.out.println("Name of T1 is: " +  t1.getName());
//		System.out.println("Name of T2 is: " +  t2.getName());
//		System.out.println("Id of T1 is : " +  t1.getId());
//		System.out.println("Id of T2 is : " +  t2.getId());
//		
//		t1.start();
//		t2.start();
//		
//		t1.setName("Bismark Otu");
//		
//		System.out.println("New Name of t1 is " + t1.getName());
		
//		Threads t1 = new Threads();
//		Threads t2 = new Threads();
//		Threads t3 = new Threads();
//		t1.run();
		
//		try {
//  JOIN RUN THE THREAD AND DIE BEFORE IT ALLOWS THE OTHER THREAD TO RUN
//		t1.join();
//			
//		} catch (InterruptedException e) {
//			
//			System.out.println(e);
//		}
		
//		t2.start();
//		
//		t3.start();
		
		
		

//		Threads th = new Threads();
//		Threads ths = new Threads();
		//   START MEHTOD EXCECUTE THE PROGRAM AT THE SAME TIME
//		th.start();
//		ths.start();
		//    RUN METHOD EXCECUTE THE PROGRAM ONE AFTER THE OTHER
//		th.run();
//		ths.run();
	

	

}
